#!/usr/bin/env bash

set -euo pipefail

tmux_sessions='tmux ls -F "  #{session_name}"'

fzf_command() {
  # using `reload:cmd` instead of `reload(cmd)` because otherwise fzf fails to
  # parse a command with braces
  fzf \
    --prompt="❯ " \
    --header-border \
    --input-border \
    --list-border \
    --info=inline-right \
    --list-label " sessions " \
    --ghost="Tmux sessions" \
    --reverse \
    --no-input \
    --accept-nth=2 \
    --bind=alt-enter:print-query \
    --bind="j:down,k:up,q:abort" \
    --bind="p,alt-p:toggle-preview" \
    --bind="r,alt-r:change-preview-window(down|right)" \
    --bind="d,x,ctrl-x:execute-silent(tmux kill-session -t {2})+reload:$tmux_sessions" \
    --bind="i,/:show-input+unbind(j,k,q,d,x,p,r,i,/)" \
    --bind="focus:transform-preview-label:echo '  {1..2}  '" \
    --preview="tmux capture-pane -ep -t '{2}:'" \
    --preview-window="right,75%" \
    --exit-0 \
    --query="${*:-}" || true
}

session_name=$(eval "$tmux_sessions" | fzf_command "$@")

# Cancelled command
if [[ -z "$session_name" ]]; then
  exit 0
fi

# Escape special tmux characters (if creating a new session)
session_name=$(echo "$session_name" | tr '=:.' '_')

tmux has-session -t "=$session_name" >/dev/null 2>&1 || tmux new-session -d -s "$session_name" && tmux switch-client -t "=$session_name"
