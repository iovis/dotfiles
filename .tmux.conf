## Prefix
unbind C-b
set -g prefix C-Space
bind Space send-prefix

## Plugins
set -g @plugin 'tmux-plugins/tmux-battery'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-cpu'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-sessionist'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tpm'

## Config
set -g display-panes-time 4000
set -g renumber-windows on
set -g visual-activity off
setw -g automatic-rename on
setw -g mode-keys vi
setw -g monitor-activity on
setw -g xterm-keys on

## Smart pane switching with awareness of vim splits
## See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

## Bindings
bind-key b attach -c "#{pane_current_path}"\; display-message "changed path to #{pane_current_path}"

bind-key Q kill-window -a
bind-key c new-window -c "#{pane_current_path}"
bind-key º kill-pane

bind-key H split-window -fv -c "#{pane_current_path}"
bind-key V split-window -fh -c "#{pane_current_path}"
bind-key h split-window -v -c "#{pane_current_path}"
bind-key v split-window -h -c "#{pane_current_path}"

bind-key s set-window-option synchronize-panes

bind-key -n C-f choose-tree -Zs
bind-key -n M-Space last-window

# Figure out something to do with <prefix>l
unbind l

bind-key -n S-left previous-window
bind-key -n S-right next-window

bind-key -r < swap-window -t -1
bind-key -r > swap-window -t +1

bind-key -n C-down  resize-pane -D 5
bind-key -n C-left  resize-pane -L 5
bind-key -n C-right resize-pane -R 5
bind-key -n C-up    resize-pane -U 5

bind-key = select-layout tiled

bind-key -r down  swap-pane -d -t "{down-of}"
bind-key -r left  swap-pane -d -t "{left-of}"
bind-key -r right swap-pane -d -t "{right-of}"
bind-key -r up    swap-pane -d -t "{up-of}"

bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"

bind C-l send-keys 'C-l'
bind C-k send-keys 'C-k'

bind-key -n C-_ if-shell "$is_vim" "send-keys C-_"  "copy-mode"
bind-key ñ if-shell "$is_vim" "send-keys ñ"  "copy-mode \; send-key ?"

bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'ñ' command-prompt -p "(search down)" "send -X search-forward \"%%%\""
bind-key -T copy-mode-vi 'Ñ' command-prompt -p "(search up)" "send -X search-backward \"%%%\""
bind-key -T copy-mode-vi 'H' send-keys -X back-to-indentation
bind-key -T copy-mode-vi 'L' send-keys -X end-of-line

## Mouse
set -g mouse on
bind -T copy-mode-vi WheelDownPane send -N5 -X scroll-down
bind -T copy-mode-vi WheelUpPane send -N5 -X scroll-up
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
bind -n WheelDownPane select-pane -t= \; send-keys -M

# Start window and pane indices at 1.
set -g base-index 1
set -g pane-base-index 1

## Set the title bar
set -g set-titles on
set -g set-titles-string '#S :: #W'

## Styles
### Message
set -g message-style 'bg=default,fg=yellow'

### Status
set -g status-bg "#1c1c1c"
set -g status-fg white
set -g status-justify left
set -g status-left-length 90
set -g status-right-length 60

set -g status-left " #[fg=blue]#S "

set -g status-right '#{?pane_synchronized,#[fg=blue]sync ,}#{battery_color_status_fg}#[bg=#1c1c1c]#{battery_percentage} #{battery_remain} #{cpu_fg_color}#{cpu_percentage}#{cpu_icon} '

### Window
setw -g automatic-rename-format '#{b:pane_current_path}/#{pane_current_command}'

set -g window-status-activity-style 'bg=default'

set -g window-status-current-format "#[fg=white]:: #[fg=green]#I|#W#{?window_zoomed_flag,#[fg=blue][+],}"
set -g window-status-format ":: #{?window_activity_flag,#[fg=red],}#I|#W"

## Plugin config
set -g @batt_color_status_primary_charged 'blue'
set -g @batt_color_status_primary_charging 'blue'
set -g @batt_remain_short true
set -g @continuum-restore 'on'
set -g @continuum-save-interval '5'
set -g @resurrect-capture-pane-contents 'on'
set -g @resurrect-strategy-nvim 'session'
set -g @sessionist-alternate 'C-Space'

## Keep at the end
run -b '~/.tmux/plugins/tpm/tpm'
