begin
  require 'pry-doc'
rescue LoadError
  puts "couldn't load pry-doc"
end

begin
  require 'awesome_print'
  Pry.config.print = proc { |output, value| output.puts value.ai }
rescue LoadError
  puts "couldn't load awesome_print"
end

Pry.config.color = true
Pry.config.pager = false

begin
  require 'pry-byebug'

  if defined?(PryByebug)
    Pry.commands.alias_command 'c', 'continue'
    Pry.commands.alias_command 's', 'step'
    Pry.commands.alias_command 'n', 'next'
    Pry.commands.alias_command 'f', 'finish'

    Pry::Commands.command(/^$/, 'Hit Enter to go to next line') do
      last_command = Pry.history.to_a.last
      pry_instance.input = StringIO.new(last_command) if %w[n next].include? last_command
    end
  end
rescue LoadError
  puts "couldn't load pry-byebug"
end

# Show the code that broke when getting an exception
Pry.config.exception_handler = proc do |_output, _exception, pry_instance|
  pry_instance.run_command 'cat --ex'
end
