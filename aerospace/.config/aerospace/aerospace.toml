start-at-login = true
accordion-padding = 350
after-startup-command = [
  'exec-and-forget ~/.dotfiles/bin/aerospace_move_all_to_workspace J',
]

# Mouse follows focus when focused monitor changes
# Drop it from your config, if you don't like this behavior
# See https://nikitabobko.github.io/AeroSpace/guide#on-focus-changed-callbacks
# See https://nikitabobko.github.io/AeroSpace/commands#move-mouse
# on-focused-monitor-changed = ['move-mouse monitor-lazy-center']
on-focused-monitor-changed = []

# Gaps between windows (inner-*) and between monitor edges (outer-*).
# Possible values:
# - Constant:     gaps.outer.top = 8
# - Per monitor:  gaps.outer.top = [{ monitor.main = 16 }, { monitor."some-pattern" = 32 }, 24]
#                 In this example, 24 is a default value when there is no match.
#                 Monitor pattern is the same as for 'workspace-to-monitor-force-assignment'.
#                 See: https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
[gaps]
inner.horizontal = 10
inner.vertical = 10
outer.left = 10
outer.bottom = 10
outer.top = 10
outer.right = 10

[workspace-to-monitor-force-assignment]
J = 'main'      # Main monitor
K = 'secondary' # Non-main monitor in case when there are only two monitors

[mode.main.binding]
# All possible keys:
# - Letters.        a, b, c, ..., z
# - Numbers.        0, 1, 2, ..., 9
# - Keypad numbers. keypad0, keypad1, keypad2, ..., keypad9
# - F-keys.         f1, f2, ..., f20
# - Special keys.   minus, equal, period, comma, slash, backslash, quote, semicolon, backtick,
#                   leftSquareBracket, rightSquareBracket, space, enter, esc, backspace, tab
# - Keypad special. keypadClear, keypadDecimalMark, keypadDivide, keypadEnter, keypadEqual,
#                   keypadMinus, keypadMultiply, keypadPlus
# - Arrows.         left, down, up, right

# All possible modifiers: cmd, alt, ctrl, shift

# All possible commands: https://nikitabobko.github.io/AeroSpace/commands

ctrl-alt-cmd-space = 'mode prefix'
[mode.prefix.binding]
esc = 'mode main'

g = 'mode workspace'

q = ['close-all-windows-but-current', 'mode main']
s = ['exec-and-forget ~/.dotfiles/bin/aerospace_secondary', 'mode main']
w = ['exec-and-forget ~/.dotfiles/bin/aerospace_swap', 'mode main']

h = ['workspace H', 'mode main']
j = ['workspace J', 'mode main']
k = ['workspace K', 'mode main']
l = ['workspace L', 'mode main']

shift-h = ['move-node-to-workspace H', 'workspace H', 'mode main']
shift-j = ['move-node-to-workspace J', 'workspace J', 'mode main']
shift-k = ['move-node-to-workspace K', 'workspace K', 'mode main']
shift-l = ['move-node-to-workspace L', 'workspace L', 'mode main']

alt-h = [
  'exec-and-forget ~/.dotfiles/bin/aerospace_move_all_to_workspace H',
  'mode main',
]
alt-j = [
  'exec-and-forget ~/.dotfiles/bin/aerospace_move_all_to_workspace J',
  'mode main',
]
alt-k = [
  'exec-and-forget ~/.dotfiles/bin/aerospace_move_all_to_workspace K',
  'mode main',
]
alt-l = [
  'exec-and-forget ~/.dotfiles/bin/aerospace_move_all_to_workspace L',
  'mode main',
]

[mode.workspace.binding]
enter = 'mode main'
esc = 'mode main'

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace
a = ['workspace A', 'mode main']
b = ['workspace B', 'mode main']
c = ['workspace C', 'mode main']
d = ['workspace D', 'mode main']
e = ['workspace E', 'mode main']
f = ['workspace F', 'mode main']
g = ['workspace G', 'mode main']
h = ['workspace H', 'mode main']
i = ['workspace I', 'mode main']
j = ['workspace J', 'mode main']
k = ['workspace K', 'mode main']
l = ['workspace L', 'mode main']
m = ['workspace M', 'mode main']
n = ['workspace N', 'mode main']
o = ['workspace O', 'mode main']
p = ['workspace P', 'mode main']
q = ['workspace Q', 'mode main']
r = ['workspace R', 'mode main']
s = ['workspace S', 'mode main']
t = ['workspace T', 'mode main']
u = ['workspace U', 'mode main']
v = ['workspace V', 'mode main']
w = ['workspace W', 'mode main']
x = ['workspace X', 'mode main']
y = ['workspace Y', 'mode main']
z = ['workspace Z', 'mode main']

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace
shift-a = ['move-node-to-workspace A', 'workspace A', 'mode main']
shift-b = ['move-node-to-workspace B', 'workspace B', 'mode main']
shift-c = ['move-node-to-workspace C', 'workspace C', 'mode main']
shift-d = ['move-node-to-workspace D', 'workspace D', 'mode main']
shift-e = ['move-node-to-workspace E', 'workspace E', 'mode main']
shift-f = ['move-node-to-workspace F', 'workspace F', 'mode main']
shift-g = ['move-node-to-workspace G', 'workspace G', 'mode main']
shift-h = ['move-node-to-workspace H', 'workspace H', 'mode main']
shift-i = ['move-node-to-workspace I', 'workspace I', 'mode main']
shift-j = ['move-node-to-workspace J', 'workspace J', 'mode main']
shift-k = ['move-node-to-workspace K', 'workspace K', 'mode main']
shift-l = ['move-node-to-workspace L', 'workspace L', 'mode main']
shift-m = ['move-node-to-workspace M', 'workspace M', 'mode main']
shift-n = ['move-node-to-workspace N', 'workspace N', 'mode main']
shift-o = ['move-node-to-workspace O', 'workspace O', 'mode main']
shift-p = ['move-node-to-workspace P', 'workspace P', 'mode main']
shift-q = ['move-node-to-workspace Q', 'workspace Q', 'mode main']
shift-r = ['move-node-to-workspace R', 'workspace R', 'mode main']
shift-s = ['move-node-to-workspace S', 'workspace S', 'mode main']
shift-t = ['move-node-to-workspace T', 'workspace T', 'mode main']
shift-u = ['move-node-to-workspace U', 'workspace U', 'mode main']
shift-v = ['move-node-to-workspace V', 'workspace V', 'mode main']
shift-w = ['move-node-to-workspace W', 'workspace W', 'mode main']
shift-x = ['move-node-to-workspace X', 'workspace X', 'mode main']
shift-y = ['move-node-to-workspace Y', 'workspace Y', 'mode main']
shift-z = ['move-node-to-workspace Z', 'workspace Z', 'mode main']

# Floating layout apps
# $ aerospace list-apps
[[on-window-detected]]
if.app-id = 'com.1password.1password'
run = 'layout floating'
[[on-window-detected]]
if.app-id = 'com.apple.Music'
run = 'layout floating'
[[on-window-detected]]
if.app-id = 'com.apple.MobileSMS'
run = 'layout floating'
[[on-window-detected]]
if.app-id = 'com.colliderli.iina'
run = 'layout floating'
[[on-window-detected]]
if.app-id = 'com.cisco.anyconnect.gui'
run = 'layout floating'
[[on-window-detected]]
if.app-id = 'Cisco-Systems.Spark' # Webex
run = 'layout floating'
[[on-window-detected]]
if.app-id = 'com.culturedcode.ThingsMac'
run = 'layout floating'
